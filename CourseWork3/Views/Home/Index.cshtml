@model X.PagedList.IPagedList<AudioFile>
@using Microsoft.AspNetCore.Identity

@{
	ViewData["Title"] = "Главная";
}

<div class="text-center">

	@if (Model == null || !Model.Any())
	{
		<p>Нет загруженных файлов.</p>
	}
	else
	{
		<h3>Доступные аудиофайлы</h3>
		<ul class="list-unstyled">
			@foreach (var audio in Model)
			{
				<li class="mb-4 border-bottom pb-3">
					@{
						var displayData = new List<(string Label, string? Value)>
						{
							("Название", audio.Title)
						};

						if (audio.IsMusicOnly)
						{
							displayData.Add(("Автор", audio.Author));
							displayData.Add(("Жанр", audio.Genre));
						}
						var uploaderDisplay = !string.IsNullOrWhiteSpace(audio.User?.DisplayName) ? audio.User.DisplayName : "Неизвестный пользователь";
						//displayData.Add(("Опубликовал", uploaderDisplay));
					}
					@foreach (var item in displayData)
					{
						<p>
							<strong>@item.Label:</strong>
							@if (!string.IsNullOrWhiteSpace(item.Value))
							{
								@item.Value
							}
							else
							{
								<em>Неизвестно</em>
							}
						</p>
					}
					@if (!string.IsNullOrWhiteSpace(audio.User?.Id))
					{
						<p>
							<strong>Опубликовал:</strong>
							<a asp-action="UserProfile" asp-controller="Audio" asp-route-id="@audio.User.Id">
								@uploaderDisplay
							</a>
						</p>
					}

					<audio id="player-@audio.Id" src="/Audio/Stream/@audio.Id" controls class="w-100" style="max-width: 400px;">
						<source src="@Url.Action("Stream", "Audio", new { id = audio.Id })" type="audio/mpeg"/>
						Ваш браузер не поддерживает воспроизведение аудио.
					</audio>
					<p>
						<strong>Прослушиваний:</strong> @audio.PlayCount
					</p>
					<p>
						<strong>Скачиваний:</strong> @audio.DownloadCount
					</p>

					<div class="mt-2">
						<form method="post" asp-controller="Audio" asp-action="Like" asp-route-id="@audio.Id" style="display:inline">
							<button type="submit" class="btn btn-outline-success btn-sm">👍 @audio.Likes</button>
						</form>
						<form method="post" asp-controller="Audio" asp-action="Dislike" asp-route-id="@audio.Id" style="display:inline">
							<button type="submit" class="btn btn-outline-danger btn-sm">👎 @audio.Dislikes</button>
							<!--            +++++++++++++++++++++         -->
						</form>
						<button class="btn btn-outline-primary btn-sm"
						        onclick="copyToClipboard('@Url.Action("Details", "Audio", new { id = audio.Id }, Context.Request.Scheme)')">
							Копировать ссылку
						</button>
						<!--            -----------------------         -->
						<a class="btn btn-outline-primary btn-sm" href="@Url.Action("Download", "Audio", new { id = audio.Id })">⬇ Скачать</a>

					</div>

				</li>
			}
		</ul>
		<div class="pagination-container mt-4">
			<ul class="pagination justify-content-center">
				@if (Model.HasPreviousPage)
				{
					<li class="page-item">
						<a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber - 1 })">« Назад</a>
					</li>
				}
				@for (var i = 1; i <= Model.PageCount; i++)
				{
					<li class="page-item @(i == Model.PageNumber ? "active" : "")">
						<a class="page-link" href="@Url.Action("Index", new { page = i })">@i</a>
					</li>
				}
				@if (Model.HasNextPage)
				{
					<li class="page-item">
						<a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber + 1 })">Вперед »</a>
					</li>
				}
			</ul>
		</div>
		@section Scripts {
			<script>
        document.addEventListener("DOMContentLoaded", function () {
            const players = document.querySelectorAll('audio[id^="player-"]');

            players.forEach(player => {
                let playRegistered = false;
                const id = player.id.replace("player-", "");

                player.addEventListener('play', function () {
                    if (playRegistered) return;
                    playRegistered = true;

                    fetch(`/Audio/RegisterPlay/${id}`, { method: 'POST' });
                });
            });
        });
    </script>
		}

	}
</div>
<script>
    function copyToClipboard(text) {
        navigator.clipboard.writeText(text);
    }
</script>